sudo: required

services:
  - docker

language: java
jdk: oraclejdk8

env:
  global:
    - secure: "mXpqdCr0E9286vFJie7INtqKocX672G1g26fGvull0rxv26cGD+c1V2a2SQOlAogOnSjNXgZTfvj/Ajd5/Z8dUTAObeVBzC4Vz1EttbYx8CoNM1wBl8foKK920zj+KbNN90xky7cz1oMPX3pNXXso1BspI1PHCIKMop6fydjxmlbxQAopCwClkYbbWrla/npt00+iEBKYG4EELa4hDR546GTMsmfzp44g442inLS3E0hBftp/4JMUW9g8hlmzvZenLtRRgxZDDyDDziAqFvqU4zDp8il40sHEB9+3v7BRHFYEFZbuzKYgngK7fLXwbpjzXzqOZzBf4OIEQs0S/M6RYi2ISiYfAgK2t4nIDWcG8gsC0Du1F7LiTUgkAqf681OEZw9sEIrC2SYZc72h8P/vGjrbz1jB7eNl5+81vQ2YlKKIExQK1/C53QEYEJTj7HJMhHXXr3zoDRVxaFOZI7huLWk2y71visNzeHcl4OVM75I5dtQilHs7O81i8QCas2wUrEmk4k2ANq1zWl/kSEH5Gh8EIJiUKOlvPVOav4tTIwKzc34nqJWCwEmzHYgdna+mKCJVjaxpjgh+AUNlokHtCiE1NYMftKmwxfyr5jjogTOlbQANnJYy2/Y7IaFQHmMm2erSTYsgxtmodOX82Ti8GQ/ZYOOCMHpEfGVM4M5aB0="
    - secure: "RYxaNNQk7se1eFqQYXx3oxHrcmdNKO2SC+60FmxPaxHei6j9HgHxU3ruYCmLLPily9/JHJr7b5qj8Yjq17FGgLejyrYJgLGi5oWN2E7SMC+rLyEdO4+HEnrsKpBFKInM2l+ZgEecKgh9onLdslOMECWuNOPgakLrkMigc12MmNmOiSiivyMQUatBgAhwyBHY0YC48jXFLoJXORw73F0r5yhJfgbkU0+97LRMiKJ22AhSMW/TSaWV/4OcoElhWeaasLUDLSPQDe+nok5TzgdvZx0qkLw5M7BxUHqIvgCkQDFanjlfhjoZXvp18p7fQOgzdgkwYPU6KuZXBIaKm9bIMeDGocEE7FJdaK4ojfpoclO33OiB/ZcpMTDwjw896rE7HYInd0qekBAqQeqGEgNGNnCID+FoBO+IE+KQid53RflERrtzwZaHCBOJrq6ySaI403inIorOHDkAWXs9KhOQ4GD0/uWN1bsIOna2fThOb0HLIOObsKlOqACLl5rf2LJdY8iIWU5SDu6zcXJJy5/kxZRPckbBpex0XZRRIv+zgMoe42bM+uZtOd/CYpQdTz2EuEyhptp8SPeK/9sSwqzHfv2hrjyGIKItNJnXYUrCnTDbT+MbP21OSpOCJOjvtGYE4SvrGTDNKbWLa7RQO15iwUeGpWLBRjj8MSxDRBx1R+w=" # DOCKER_USER
    - secure: "gqWUTlmqkdF24inaGsyin8R3hdXLhck5CW5gpWBOdign5Zx7L5xyT777ebOg4612ewgncuAWBxCPBtLMcyBSaULAC6LJtQODuxDjfhiso8B9zL3pyjw/4QMgjc9hyzNW/I0/S5uIqDAsNAfaZ/5Mc/TJl3ixChfSb3a7SzmHDRCyyn/lLr4rK4bZDw6jwsGghr9CT5sGh22rk7J5dfgJEF0I6RrYjbRa/UALjZ9NwLMBXPAc4SJADa67iRzRLnwYPmmWVB20y5na2ITRMoIkaDMUtcxXQ4CyNLOPiuzRTThQPRDLybIoIK4gBzFoG0PHyl+RuHvIZQKImPJbEorJnxFaZW4sIThFKgQTBnl1rpk6YZ6yrsaQnvFF+rODHLHD1Nux5CnbPqdY7si+LOTtJWafcD7hbjrh+YlYNoAInGWCGk2gLt5Xe5HyAl838lV25vTHZ6OiuCOE22/UIakLeyDw4/OXa4oTvnsM5nLrDkQEHh0B2IwkpSUwRh9iGVB+uCsAcvQMp7964X+LtwrQOgOZOuTIu8spMDlM3uabLjdzR9N1DMswv0T7Z+jc9+FirkMhwnbpIAdgz+zH+47GKzv/k5dRgQMrvQr4Kh+BIkGpEYA7YWueEBhPCO5pIvDMLTxj7bazICWkcBt0su1fh0AB6V+AcLkbseDuc0jCM28=" # DOCKER_PASS
    - COMMIT=${TRAVIS_COMMIT::7}

after_success:
  - bash <(curl -s https://codecov.io/bash)
  - docker login -u $DOCKER_USER -p $DOCKER_PASS

  #TAG
  - export TAG=`if [ "$TRAVIS_BRANCH" == "master" ]; then echo "latest"; else echo $TRAVIS_BRANCH ; fi`

  # CONFIG SERVICE
  - export CONFIG=receptoron/cloud-application-configuration-service
  - docker build -t $CONFIG:$COMMIT ./configuration-service
  - docker tag $CONFIG:$COMMIT $CONFIG:$TAG
  - docker push $CONFIG

  # AUTHENTICATION-SERVICE
  - export REGISTRY=receptoron/cloud-application-authentication-service
  - docker build -t $REGISTRY:$COMMIT ./authentication-service
  - docker tag $REGISTRY:$COMMIT $REGISTRY:$TAG
  - docker push $REGISTRY

  # GATEWAY
  - export GATEWAY=receptoron/cloud-application-gateway-service
  - docker build -t $GATEWAY:$COMMIT ./gateway-service
  - docker tag $GATEWAY:$COMMIT $GATEWAY:$TAG
  - docker push $GATEWAY

  # EUREKA
  - export EUREKA=receptoron/cloud-application-eureka-service
  - docker build -t $EUREKA:$COMMIT ./eureka-service
  - docker tag $EUREKA:$COMMIT $EUREKA:$TAG
  - docker push $EUREKA

  # CHAT SERVICE
  - export AUTH_SERVICE=receptoron/cloud-application-chat-service
  - docker build -t $AUTH_SERVICE:$COMMIT ./chat-service
  - docker tag $AUTH_SERVICE:$COMMIT $AUTH_SERVICE:$TAG
  - docker push $AUTH_SERVICE

  # USER MANAGEMENT SERVICE
  - export USER_MANAGEMENT_SERVICE=receptoron/cloud-application-user-management-service
  - docker build -t $USER_MANAGEMENT_SERVICE:$COMMIT ./user-management-service
  - docker tag $USER_MANAGEMENT_SERVICE:$COMMIT $ACCOUNT_SERVICE:$TAG
  - docker push $USER_MANAGEMENT_SERVICE

  # MONITORING
  - export MONITORING=receptoron/cloud-application-monitoring-service
  - docker build -t $MONITORING:$COMMIT ./monitoring-service
  - docker tag $MONITORING:$COMMIT $MONITORING:$TAG
  - docker push $MONITORING

  # TURBINE STREAM SERVICE
  - export TURBINE=receptoron/cloud-application-turbine-stream-service
  - docker build -t $TURBINE:$COMMIT ./turbine-stream-service
  - docker tag $TURBINE:$COMMIT $TURBINE:$TAG
  - docker push $TURBINE